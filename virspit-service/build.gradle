plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.virspit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "2020.0.3")
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // mongo
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb-reactive'
    implementation group: 'org.mongodb', name: 'mongodb-driver-sync'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // query dsl
    implementation 'com.querydsl:querydsl-mongodb'
    implementation 'com.querydsl:querydsl-apt'
    // react test
    testImplementation 'io.projectreactor:reactor-test'
    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation group: 'org.apache.kafka', name: 'kafka-clients'
    // mockito
    testImplementation 'org.mockito:mockito-core:3.+'
    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    //eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-feign', version: '1.4.7.RELEASE'
    //logstash
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}


def querydslGeneratedDir = "$buildDir/generated/querydsl" as Object
querydsl {
    library = "com.querydsl:querydsl-apt"
    springDataMongo = true
    querydslSourcesDir = querydslGeneratedDir
}

sourceSets {
    main.java.srcDir querydslGeneratedDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}